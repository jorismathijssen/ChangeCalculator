name: Build, Push, and Deploy to GKE

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and Push Docker Images
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/frontend:latest ./Frontend
        docker push ghcr.io/${{ github.repository_owner }}/frontend:latest
        docker build -t ghcr.io/${{ github.repository_owner }}/backend:latest ./Backend
        docker push ghcr.io/${{ github.repository_owner }}/backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install gke-gcloud-auth-plugin
        run: |
          echo "Installing gke-gcloud-auth-plugin..."
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Set Auth Plugin Env Variable
        run: echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials chance-cluster --zone europe-west1 --project examplechangecalculator
          kubectl config set-credentials gke-auth --exec-command=gke-gcloud-auth-plugin

      - name: Debug - List Kubernetes Contexts
        run: kubectl config get-contexts

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/backend-api
          kubectl rollout status deployment/frontend-app

      - name: Verify Deployment
        run: |
          kubectl get services
          kubectl get pods
